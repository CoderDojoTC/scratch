{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities Scratch Resources This GitHub repository is for sharing teaching resources to teach Scratch. This includes hints on getting both your students and mentors up to speed on Scratch. The site includes lesson plans and sample programs designed to be consitent with both the Python and Robots groups. If you hear of any good tools, please let us know. Target Audience Learning Scratch is ideal for students that don not yet have good keyboarding skills. Once students master using the shift keys and keyboard functions like copy and pasting text we suggest they move on to learing Python with turtle graphcs. List of Concepts Here are some of the concepts we will be learning in this course. If you are already familiar with these concepts you can skip over some of the labs. events - Capture an event such as clicking the run program button or a keyboard press. screen motion - Moving forward and turning with parameters such as distance and angle. square walk - Teach your sprite to walk in a square and draw figures. variables - Variables make our programs easier to read and easier to understand. loops - Loops help us when we have many tasks that we repeat over and over. conditionals - Conditionals allow us to change our behavior based on the rules we create. random numbers - Random number functions allow our programs to have the computer select new random numbers between a range of numbers. inputs Inputs allow us to prompt the user for values. Contributing to Our Library Do you have a specific example you would like to share with other students and teachers? Please see the Contributing menu for details on how to share your code.","title":"CoderDojo Twin Cities Scratch Resources"},{"location":"#coderdojo-twin-cities-scratch-resources","text":"This GitHub repository is for sharing teaching resources to teach Scratch. This includes hints on getting both your students and mentors up to speed on Scratch. The site includes lesson plans and sample programs designed to be consitent with both the Python and Robots groups. If you hear of any good tools, please let us know.","title":"CoderDojo Twin Cities Scratch Resources"},{"location":"#target-audience","text":"Learning Scratch is ideal for students that don not yet have good keyboarding skills. Once students master using the shift keys and keyboard functions like copy and pasting text we suggest they move on to learing Python with turtle graphcs.","title":"Target Audience"},{"location":"#list-of-concepts","text":"Here are some of the concepts we will be learning in this course. If you are already familiar with these concepts you can skip over some of the labs. events - Capture an event such as clicking the run program button or a keyboard press. screen motion - Moving forward and turning with parameters such as distance and angle. square walk - Teach your sprite to walk in a square and draw figures. variables - Variables make our programs easier to read and easier to understand. loops - Loops help us when we have many tasks that we repeat over and over. conditionals - Conditionals allow us to change our behavior based on the rules we create. random numbers - Random number functions allow our programs to have the computer select new random numbers between a range of numbers. inputs Inputs allow us to prompt the user for values.","title":"List of Concepts"},{"location":"#contributing-to-our-library","text":"Do you have a specific example you would like to share with other students and teachers? Please see the Contributing menu for details on how to share your code.","title":"Contributing to Our Library"},{"location":"contact/","text":"CoderDojo Twin Cities Contact Dan McCreary","title":"Contact"},{"location":"contact/#coderdojo-twin-cities-contact","text":"Dan McCreary","title":"CoderDojo Twin Cities Contact"},{"location":"labs/","text":"List of Turtle Graphics Labs These labs are ideal for students that have never done programming before. It will slowly introduce them to the concepts we used to write a program. The goal is to keep the number of blocks small but still teach the key concepts. These labs will be repeated in the Python curriculum once students gain keyboarding skills. Sprite Movement Commands Move a sprite in a square - we first need to understand the idea of an event that triggers the start of the program From Events Add the green \"When Flag Clicked\" Block From Motion Add the Move Foward Change Move Foward to be 100 From the Motion Add the Turn Right Change the turn right to be 90 Add more blocks to complete a square Drawing with the Pen Add the drawing extension and use the pendown - this lab is to get the students familiar with using the turtle to draw lines Add the pendown before the Move Foward Add the pen color block Change the pen color Change the pen size Adding Variables Add a Variable for the Distance Add a Variable for the Angle Adding a Loop Put the Forward and Right the for loop Change the Loop Count Draw a Hexagon Change the angle to be 60 Change the loop count to be 6 Change the Drawing Color for Even/Odd Steps in a Loop Conditionals Add a conditional block that will change the color","title":"Summary of Labs"},{"location":"labs/#list-of-turtle-graphics-labs","text":"These labs are ideal for students that have never done programming before. It will slowly introduce them to the concepts we used to write a program. The goal is to keep the number of blocks small but still teach the key concepts. These labs will be repeated in the Python curriculum once students gain keyboarding skills.","title":"List of Turtle Graphics Labs"},{"location":"labs/#sprite-movement-commands","text":"Move a sprite in a square - we first need to understand the idea of an event that triggers the start of the program From Events Add the green \"When Flag Clicked\" Block From Motion Add the Move Foward Change Move Foward to be 100 From the Motion Add the Turn Right Change the turn right to be 90 Add more blocks to complete a square","title":"Sprite Movement Commands"},{"location":"labs/#drawing-with-the-pen","text":"Add the drawing extension and use the pendown - this lab is to get the students familiar with using the turtle to draw lines Add the pendown before the Move Foward Add the pen color block Change the pen color Change the pen size","title":"Drawing with the Pen"},{"location":"labs/#adding-variables","text":"Add a Variable for the Distance Add a Variable for the Angle","title":"Adding Variables"},{"location":"labs/#adding-a-loop","text":"Put the Forward and Right the for loop Change the Loop Count","title":"Adding a Loop"},{"location":"labs/#draw-a-hexagon","text":"Change the angle to be 60 Change the loop count to be 6","title":"Draw a Hexagon"},{"location":"labs/#change-the-drawing-color-for-evenodd-steps-in-a-loop","text":"Conditionals Add a conditional block that will change the color","title":"Change the Drawing Color for Even/Odd Steps in a Loop"},{"location":"intro/01-getting-started/","text":"Getting Started with Scratch Scratch is ideal for students that want to learn the principals of programming before they have keyboarding skills. Once they have keyboarding skills we suggest they move on to learning turtle graphics with Python. Before you begin your mentoring session we recommend you do the following: Go to the scratch web site: http://scratch.mit.edu/ Create your own account for yourself and suggest that each student create their account with the help of their parent or guardian. If they want to come back and continue working on their programs they must have their own account. Get familiar with the layout and functions of the site. Make sure you know how to go to the lower-left corner of the web page and find the \"Add Extensions\" to add the \"Pen\" extension for drawing lines. We use pen drawing commands in most of our exercies. Get familiar with each of the types of blocks and what tab they are under. You can use the color of the blocks in the examples to find out where the blocks came from. It is also helpful to know the first four principals of computational thinking we discuss in our Beginning Concepts are of our CoderDojo Mentor Resrouces site.","title":"Getting Started"},{"location":"intro/01-getting-started/#getting-started-with-scratch","text":"Scratch is ideal for students that want to learn the principals of programming before they have keyboarding skills. Once they have keyboarding skills we suggest they move on to learning turtle graphics with Python. Before you begin your mentoring session we recommend you do the following: Go to the scratch web site: http://scratch.mit.edu/ Create your own account for yourself and suggest that each student create their account with the help of their parent or guardian. If they want to come back and continue working on their programs they must have their own account. Get familiar with the layout and functions of the site. Make sure you know how to go to the lower-left corner of the web page and find the \"Add Extensions\" to add the \"Pen\" extension for drawing lines. We use pen drawing commands in most of our exercies. Get familiar with each of the types of blocks and what tab they are under. You can use the color of the blocks in the examples to find out where the blocks came from. It is also helpful to know the first four principals of computational thinking we discuss in our Beginning Concepts are of our CoderDojo Mentor Resrouces site.","title":"Getting Started with Scratch"},{"location":"intro/02-list-of-blocks-used-in-intro/","text":"Adding the Pen Extension To be consistent with the other labs we are using the fast-feedback drawing with turtle graphics philosophy. Unfortunately, the MIT Scratch 3.0 user interface does not enable the Pen drawing blocks in the default user menu. This must be done before you can add the \"pendown\" block that enables drawing. To do this, go to the lower-left corner of the main Scratch coding page. There will be a blue box. If you hover over it, it will show that this is the \"Add Extension\" control. You will need to click on this box. After you click on the Add Extension control you will see a grid of extension Options. Each one is a card that descibes the exetenion you can add. Find the Pen Extension card and click on that card. After you click this you must use the Back Icon at the top-left corner of the screen. When you are back to the main screen you should now see the Pen blocks on the lower left of the blocks menu. We are going to only use a few pen blocks for our fist labs: pen down - this will draw a line on the screen as the turtle moves set pen color to - this will set the pen to a favorite color erase all - this will erase all the drawings and clean up the screen Now we are ready to draw a square!","title":"Adding the Pen Extension"},{"location":"intro/02-list-of-blocks-used-in-intro/#adding-the-pen-extension","text":"To be consistent with the other labs we are using the fast-feedback drawing with turtle graphics philosophy. Unfortunately, the MIT Scratch 3.0 user interface does not enable the Pen drawing blocks in the default user menu. This must be done before you can add the \"pendown\" block that enables drawing. To do this, go to the lower-left corner of the main Scratch coding page. There will be a blue box. If you hover over it, it will show that this is the \"Add Extension\" control. You will need to click on this box. After you click on the Add Extension control you will see a grid of extension Options. Each one is a card that descibes the exetenion you can add. Find the Pen Extension card and click on that card. After you click this you must use the Back Icon at the top-left corner of the screen. When you are back to the main screen you should now see the Pen blocks on the lower left of the blocks menu. We are going to only use a few pen blocks for our fist labs: pen down - this will draw a line on the screen as the turtle moves set pen color to - this will set the pen to a favorite color erase all - this will erase all the drawings and clean up the screen Now we are ready to draw a square!","title":"Adding the Pen Extension"},{"location":"intro/03-first-square/","text":"Draw A Square (the hard way) For our first lab we will draw a square with \"Cody\" our CoderDojo turtle. Cody only needs to know three commands: Move Forward 100 Steps Turn Right 90 Degrees Wait for A Second Here is the final program we would like you to create: After this program runs, you will see the following picture on the right of the screen: To do this you will need to learn how to drag blocks from the left menu to the center panel. You will need to learn how to snap the blocks in place and unsnap them if you want to reorder them. When the blocks are ready to test you will need to click the green go flag: Link to Working Program Here is a link to a working program on the MIT Scratch web site: Cody the Turtle Draws a Square Experiments What if you want to draw a Hexagon? How would you need to change the program?","title":"Drawing A Square"},{"location":"intro/03-first-square/#draw-a-square-the-hard-way","text":"For our first lab we will draw a square with \"Cody\" our CoderDojo turtle. Cody only needs to know three commands: Move Forward 100 Steps Turn Right 90 Degrees Wait for A Second Here is the final program we would like you to create: After this program runs, you will see the following picture on the right of the screen: To do this you will need to learn how to drag blocks from the left menu to the center panel. You will need to learn how to snap the blocks in place and unsnap them if you want to reorder them. When the blocks are ready to test you will need to click the green go flag:","title":"Draw A Square (the hard way)"},{"location":"intro/03-first-square/#link-to-working-program","text":"Here is a link to a working program on the MIT Scratch web site: Cody the Turtle Draws a Square","title":"Link to Working Program"},{"location":"intro/03-first-square/#experiments","text":"What if you want to draw a Hexagon? How would you need to change the program?","title":"Experiments"},{"location":"intro/04-variables-square/","text":"Draw A Square With Variables You will note that the distance we move, the angle we turn and the time we wait are all repeated many times in the program. It is hard to maintain the code if we have to remember to change the program in many places. What if we could change a single place in the program and have the entire program change its behavior? This is one use of variables. Next, we will create a distance variable: Next, look for the \"Set Variable\" block and move it under the pendown block. Type in \"100\" to the value. Next, drag the distance variable into the Move Foward Block Link to Working Program Here is a link to a working program on the MIT Scratch web site: Using a Single Variable to Change the Distance Experiments Can you create another variable for the right turn angle? What happens if you change the angle from 90 to be 60 or 120? Can you create a variable for the wait time? What happens if you change the wait time to be .1? Solution Link to Scratch Program","title":"Variables"},{"location":"intro/04-variables-square/#draw-a-square-with-variables","text":"You will note that the distance we move, the angle we turn and the time we wait are all repeated many times in the program. It is hard to maintain the code if we have to remember to change the program in many places. What if we could change a single place in the program and have the entire program change its behavior? This is one use of variables. Next, we will create a distance variable: Next, look for the \"Set Variable\" block and move it under the pendown block. Type in \"100\" to the value. Next, drag the distance variable into the Move Foward Block","title":"Draw A Square With Variables"},{"location":"intro/04-variables-square/#link-to-working-program","text":"Here is a link to a working program on the MIT Scratch web site: Using a Single Variable to Change the Distance","title":"Link to Working Program"},{"location":"intro/04-variables-square/#experiments","text":"Can you create another variable for the right turn angle? What happens if you change the angle from 90 to be 60 or 120? Can you create a variable for the wait time? What happens if you change the wait time to be .1?","title":"Experiments"},{"location":"intro/04-variables-square/#solution","text":"Link to Scratch Program","title":"Solution"},{"location":"intro/05-loops/","text":"Draw A Square With A Repeat Loop In the last experiment we use variables to make our program easier to maintain. Now let's use the repeat block to make our program even shorter! Next we will use the repeat block from the Control menu. Drag that below the set wait time block. Press the green Go flat and you should see the following diagram. Experiments Change the distance variable to a new value. Change the angle variable to a new value from 30 to 120 Change the angle to be 60 and then the index to the repeat to be 6. What shape do you have? Can you make an Octagon? An Octagon had eight sides. Note that if you divide 360 by 8 you get 45.","title":"Loops"},{"location":"intro/05-loops/#draw-a-square-with-a-repeat-loop","text":"In the last experiment we use variables to make our program easier to maintain. Now let's use the repeat block to make our program even shorter! Next we will use the repeat block from the Control menu. Drag that below the set wait time block. Press the green Go flat and you should see the following diagram.","title":"Draw A Square With A Repeat Loop"},{"location":"intro/05-loops/#experiments","text":"Change the distance variable to a new value. Change the angle variable to a new value from 30 to 120 Change the angle to be 60 and then the index to the repeat to be 6. What shape do you have? Can you make an Octagon? An Octagon had eight sides. Note that if you divide 360 by 8 you get 45.","title":"Experiments"},{"location":"intro/06-functions/","text":"Adding Your Own Function Blocks Here is the Make a Block Menu Click the Make a Block Button and Give it a name \"square\" Note that you now have a new square block Take a look at our new block function. Note that we made a few changes so that the blocks were a bit smaller. We changed the distance variable to be be only 50 so that we could add more blocks in the drawing area. Now lets draw three different squares at different locations on the screen The drawing should look like this: Link to Working Program Turtle Square Function Now put four squares on the screen in different locations Experiments How would you modify the program so that there is no line drawn between the squares? (hint - there is a penup block) Could you put the penup and pendown blocks in the function","title":"Functions"},{"location":"intro/06-functions/#adding-your-own-function-blocks","text":"Here is the Make a Block Menu Click the Make a Block Button and Give it a name \"square\" Note that you now have a new square block Take a look at our new block function. Note that we made a few changes so that the blocks were a bit smaller. We changed the distance variable to be be only 50 so that we could add more blocks in the drawing area. Now lets draw three different squares at different locations on the screen The drawing should look like this:","title":"Adding Your Own Function Blocks"},{"location":"intro/06-functions/#link-to-working-program","text":"Turtle Square Function Now put four squares on the screen in different locations","title":"Link to Working Program"},{"location":"intro/06-functions/#experiments","text":"How would you modify the program so that there is no line drawn between the squares? (hint - there is a penup block) Could you put the penup and pendown blocks in the function","title":"Experiments"},{"location":"intro/07-functions-with-parameters/","text":"Functions with Parameters Before you begin this, you should be familiar with the previous ./functions.md lab. Now we are going to add a new custom block, but this one will have both a name an a parameter that we will use to change the size of the square. The Custom Square Block With A Size Parameter Our goal is to create our own custom block that will draw a box of a given size. The size will be passed as a parameter into our block function. Each time we call this function we can create a block of a differnet size just buy passing a different number into the block. Draw Three Blocks of Different Sizes Here is how the drawing should look: Examples Functions with Parameters Example Site Experiments Change the distance variable to a new value.","title":"Functions With Parameters"},{"location":"intro/07-functions-with-parameters/#functions-with-parameters","text":"Before you begin this, you should be familiar with the previous ./functions.md lab. Now we are going to add a new custom block, but this one will have both a name an a parameter that we will use to change the size of the square.","title":"Functions with Parameters"},{"location":"intro/07-functions-with-parameters/#the-custom-square-block-with-a-size-parameter","text":"Our goal is to create our own custom block that will draw a box of a given size. The size will be passed as a parameter into our block function. Each time we call this function we can create a block of a differnet size just buy passing a different number into the block.","title":"The Custom Square Block With A Size Parameter"},{"location":"intro/07-functions-with-parameters/#draw-three-blocks-of-different-sizes","text":"Here is how the drawing should look:","title":"Draw Three Blocks of Different Sizes"},{"location":"intro/07-functions-with-parameters/#examples","text":"Functions with Parameters Example Site","title":"Examples"},{"location":"intro/07-functions-with-parameters/#experiments","text":"Change the distance variable to a new value.","title":"Experiments"}]}